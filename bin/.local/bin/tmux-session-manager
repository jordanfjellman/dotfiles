#!/bin/bash

get_current_session() {
  tmux display-message -p "#S"
}

get_sessions() {
  tmux list-sessions -F "#S"
}

kill_session() {
  session=$1
  # echo "killing session: $session"
  tmux kill-session -t $session
}

try_switch_to_next_session() {
  local existing_sessions=($(get_sessions)) # as array
  num_of_sessions=${#existing_sessions[@]}
  if [[ num_of_sessions < 2 ]]; then
    return
  fi 
  local attached_session=$(get_current_session)
  # echo "attached to ${attached_session}"
  for ((i = 0; i <  ${#existing_sessions[@]}; ++i)); do
    position=$(( $i + 1 ))
    session="${existing_sessions[$i]}"
    # echo "position: $postion; num: $num_of_sessions; attached: $attached_session; session: $session"
    if [[ $position == $num_of_sessions ]]; then
      # echo "select first: ${existing_sessions[0]}"
      tmux switch -t "${existing_sessions[0]}"
    elif [[ $attached_session == $session ]]; then
      # echo "select next: ${existing_sessions[$position]}"
      tmux switch -t "${existing_sessions[$position]}"
    fi
  # # echo "$i,$position,${session}"
  #   if [[ "${sessions_to_delete[*]}" =~ "${session}" ]]; then
  #     # if [[   ]]; then
  #     #   session
  #     # fi
  #     echo "DELETE: $session"
  #   fi
  done
  unset existing_sessions
  unset attached_session
}

sessions=($(get_sessions)) # as array
sessions_to_kill=$(gum choose --no-limit $(get_sessions)) 

echo $sessions_to_kill | tr " " "\n" | while read session_to_kill
do
  current_session=$(get_current_session)
  if [ $session_to_kill != $current_session ] || [ ${#sessions[@]} == 1 ]; then
    kill_session "$session_to_kill"
    continue
  fi
  try_switch_to_next_session
  kill_session "$current_session"
done

# for ((i = 0; i <  ${#sessions[@]}; ++i)); do
#   position=$(( $i + 1 ))
#   session="${sessions[$i]}"
#   # echo "$i,$position,${session}"
#   if [[ "${sessions_to_delete[*]}" =~ "${session}" ]]; then
#     # if [[   ]]; then
#     #   session
#     # fi
#     echo "DELETE: $session"
#   fi
# done

# get_next_session() {
#   sessions=$(get_sessions)
#   current_session=$(get_current_session)
#   local next_session = sessions
#   echo $sessions | tr " " "\n" | while read session
#     if [[ session == current_session ]]; then
#     fi
#   done
# }

# selected_sessions=$(gum choose --no-limit $(get_sessions))
# current_session=$(get_current_session)
# next_session=$(get_next_session)



# sessions=$(get_sessions)
# inline_sessions=$(echo $selected_sessions | tr " " "\n" | read -ra inline_sessions)
# echo $inline_sessions
# first_session=( "${inline_sessions[1]}" )

# echo $selected_sessions
# echo "$current_session (current)"
# echo "$first_session (first)"



# if on current session to delete, switch to the next session first
# echo $selected_sessions | tr " " "\n" | while read session
# do
#     if [[ $session == $current_session ]]; then
#         echo "Selected current session $session, $current_session"
#     fi
#     #tmux kill-session -t $session
# done

# select the next session not scheduled to delete

# echo $(selected_sessions) | tr " " "\n" while read selected_session
# do

# done